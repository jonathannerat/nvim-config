snippet class "php class"
<?php

namespace `!p
import os
relpath = path.removeprefix(os.getcwd() + "/")
dirs = relpath.split("/")[:-1]
already_title = lambda s: s[0].upper() == s[0]
snip.rv = "\\".join(map(lambda s: s if already_title(s) else s.title(), dirs))
`;

class `!p snip.rv = fn.removesuffix(".php")` ${1:extends ${2:BaseClass}}
{
	$0
}
endsnippet

snippet enum "php enum"
<?php

namespace `!p
import os
relpath = path.removeprefix(os.getcwd() + "/")
dirs = relpath.split("/")[:-1]
already_title = lambda s: s[0].upper() == s[0]
snip.rv = "\\".join(map(lambda s: s if already_title(s) else s.title(), dirs))
`;

enum `!p snip.rv = fn.removesuffix(".php")`${2:: ${1:int}}
{
	case $3 = $4;$0
}
endsnippet

snippet php "php tag"
<?php

$0
endsnippet

snippet fun "function"
${3:${1:public}$2 }function ${4:name}($5)${6:: ${7:void}}
{
	${0:// code}
}
endsnippet

snippet afun "anonymous function" i
function ($1) {
	${0:// code}
}
endsnippet

snippet fn "anonymous arrow function" i
fn ($1) => $0
endsnippet
